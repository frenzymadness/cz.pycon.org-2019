@include media-breakpoint-up(md) {
    @supports (position: sticky) {
        .sticky-top-md {
            position: sticky;
            top: 0;
            z-index: $zindex-sticky;
        }

    }
}

.pc-sticky-bottom {
    @supports (position: sticky) {
        position: sticky;
        bottom: 0;
        z-index: $zindex-sticky;
    }
}

.pc-mw-max {
    max-width: map-get($container-max-widths, xl);
}

.pc-min-w-md {
    min-width: 12rem;
}

.pc-object-fit-cover {
    object-fit: cover;
}

.pc-embed-responsive-1by1-pb-3 {
    padding-bottom: calc(100% + #{map-get($spacers, 3)/2});
}

.pc-embed-responsive-20by21::before {
    padding-top: 105%;
}

.pc-embed-responsive-3by4-pb-3 {
    height: calc(100%);
}

.pc-multicol {
    @include media-breakpoint-up(md) {
        columns: 2;
        column-gap: $grid-gutter-width;
    }

    @include media-breakpoint-up(xl) {
        columns: 3;
    }

    p,
    ul,
    ol {
        display: inline-block;
        width: 100%;
    }
}

.pc-img-effect {
    $pc-base-effect: saturate(40%) hue-rotate(-35deg);

    filter: $pc-base-effect;

    &-dark {
        filter: $pc-base-effect brightness(0.6);

        a[href]:hover ~ div > &,
        a[href]:focus ~ div > & {
            filter: $pc-base-effect;
        }

        // this goes to container over the image
        &-fallback {
            background-color: rgba($dark, .5);
        }

        &-fallback {
            @supports (filter: saturate(40%) hue-rotate(-35deg) brightness(0.6)) {
                background-color: transparent;
            }
        }
    }
}

.pc-bg-cover-image {
    background-size: cover;
    background-repeat: no-repeat;
    background-position: 50%;
    background-blend-mode: multiply;

    &-brown {
        background-color: rgba($pc-brown, 0.8);
    }
}

.pc-box-shadow {
    $pc-shadow-horizontal: 4px;
    $pc-shadow-vertical: 4px;

    margin-right: $pc-shadow-horizontal;
    margin-bottom: $pc-shadow-horizontal;
    box-shadow: $pc-shadow-vertical $pc-shadow-horizontal 0 $primary;

    &-dark {
        box-shadow: $pc-shadow-vertical $pc-shadow-horizontal 0 $dark;
    }
}

.pc-iconlink {
    $pc-icon-size: 1.125rem;
    background-repeat: no-repeat;
    background-position: 0 55%;
    background-size: $pc-icon-size;

    // todo: icons need refactor

    @mixin icon-twitter($pc-color) {
        padding-left: 1.2*$pc-icon-size;
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 400 400'><path fill='#{rgba($pc-color, 0.999999)}' d='M127 361c149 0 231-124 231-231l-1-11c12-8 32-26 40-73a99 99 0 0 1-62 19 81 81 0 0 0-138 74c-65-3-126-34-167-85-33 69-7 231 92 237-34 26-77 38-120 33 37 24 80 37 125 37'/></svg>");
    }

    @mixin icon-github($pc-color) {
        padding-left: 1.3*$pc-icon-size;
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 400 400'><path fill='#{rgba($pc-color, 0.999999)}' d='M47 28c-16.08 41.56-16.01 90.32-14.13 97.79C11.92 148.45 2 182.16 2 212.92 2 314.3 44.18 368 200 368s198-53.69 198-155.08c0-30.77-9.92-64.47-30.87-87.13C369 118.32 369.09 69.55 353 28c-37.32.67-85.4 33.91-99.09 46.92-36.95-11.04-73.4-10.74-107.82 0C132.39 61.91 84.34 28.67 47 28zm79.03 163.4c29.44 0 29.71 4.32 73.97 4.32s53.2-4.23 73.97-4.32c38.14-.16 70.38 21.7 70.62 66.57.33 61.05-37.7 88.03-144.59 88.03-106.9 0-144.9-26.98-144.58-88.03.24-44.86 41.15-66.57 70.6-66.57zM132 226c-15.4 0-28 17.28-28 38.58 0 21.29 12.61 38.42 28 38.42s28-17.13 28-38.42c0-21.3-12.62-38.58-28-38.58zm136.23 0c-15.39 0-28.23 17.28-28.23 38.58 0 21.29 12.62 38.63 28 38.63 15.4 0 28-17.34 28-38.63 0-21.3-12.38-38.58-27.77-38.58z'/></svg>");
    }

    &-twitter {
        @include icon-twitter($link-color);

        &:hover {
            @include icon-twitter($link-hover-color);
        }
    }

    &-github {
        @include icon-github($link-color);

        &:hover {
            @include icon-github($link-hover-color);
        }
    }

    $pc-blue-icon-color: lighten(desaturate($pc-deepblue, 15%), 10%);
    $pc-blue-icon-hover-color: darken($pc-blue-icon-color, 15%);

    &-blue#{&}-twitter {
        @include icon-twitter($pc-blue-icon-color);

        &:hover {
            @include icon-twitter($pc-blue-icon-hover-color);
        }
    }

    &-blue#{&}-github {
        @include icon-github($pc-blue-icon-color);

        &:hover {
            @include icon-github($pc-blue-icon-hover-color);
        }
    }

}
